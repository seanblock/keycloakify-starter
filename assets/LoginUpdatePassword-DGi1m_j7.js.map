{"version":3,"file":"LoginUpdatePassword-DGi1m_j7.js","sources":["../../node_modules/keycloakify/login/pages/LoginUpdatePassword.js"],"sourcesContent":["import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { clsx } from \"../../tools/clsx\";\nimport { useGetClassName } from \"../../login/lib/useGetClassName\";\nexport default function LoginUpdatePassword(props) {\n    const { kcContext, i18n, doUseDefaultCss, Template, classes } = props;\n    const { getClassName } = useGetClassName({\n        doUseDefaultCss,\n        classes\n    });\n    const { msg, msgStr } = i18n;\n    const { url, messagesPerField, isAppInitiatedAction, username } = kcContext;\n    return (_jsx(Template, Object.assign({}, { kcContext, i18n, doUseDefaultCss, classes }, { headerNode: msg(\"updatePasswordTitle\") }, { children: _jsxs(\"form\", Object.assign({ id: \"kc-passwd-update-form\", className: getClassName(\"kcFormClass\"), action: url.loginAction, method: \"post\" }, { children: [_jsx(\"input\", { type: \"text\", id: \"username\", name: \"username\", value: username, readOnly: true, autoComplete: \"username\", style: { display: \"none\" } }), _jsx(\"input\", { type: \"password\", id: \"password\", name: \"password\", autoComplete: \"current-password\", style: { display: \"none\" } }), _jsxs(\"div\", Object.assign({ className: clsx(getClassName(\"kcFormGroupClass\"), messagesPerField.printIfExists(\"password\", getClassName(\"kcFormGroupErrorClass\"))) }, { children: [_jsx(\"div\", Object.assign({ className: getClassName(\"kcLabelWrapperClass\") }, { children: _jsx(\"label\", Object.assign({ htmlFor: \"password-new\", className: getClassName(\"kcLabelClass\") }, { children: msg(\"passwordNew\") })) })), _jsx(\"div\", Object.assign({ className: getClassName(\"kcInputWrapperClass\") }, { children: _jsx(\"input\", { type: \"password\", id: \"password-new\", name: \"password-new\", autoFocus: true, autoComplete: \"new-password\", className: getClassName(\"kcInputClass\") }) }))] })), _jsxs(\"div\", Object.assign({ className: clsx(getClassName(\"kcFormGroupClass\"), messagesPerField.printIfExists(\"password-confirm\", getClassName(\"kcFormGroupErrorClass\"))) }, { children: [_jsx(\"div\", Object.assign({ className: getClassName(\"kcLabelWrapperClass\") }, { children: _jsx(\"label\", Object.assign({ htmlFor: \"password-confirm\", className: getClassName(\"kcLabelClass\") }, { children: msg(\"passwordConfirm\") })) })), _jsx(\"div\", Object.assign({ className: getClassName(\"kcInputWrapperClass\") }, { children: _jsx(\"input\", { type: \"password\", id: \"password-confirm\", name: \"password-confirm\", autoComplete: \"new-password\", className: getClassName(\"kcInputClass\") }) }))] })), _jsxs(\"div\", Object.assign({ className: getClassName(\"kcFormGroupClass\") }, { children: [_jsx(\"div\", Object.assign({ id: \"kc-form-options\", className: getClassName(\"kcFormOptionsClass\") }, { children: _jsx(\"div\", Object.assign({ className: getClassName(\"kcFormOptionsWrapperClass\") }, { children: isAppInitiatedAction && (_jsx(\"div\", Object.assign({ className: \"checkbox\" }, { children: _jsxs(\"label\", { children: [_jsx(\"input\", { type: \"checkbox\", id: \"logout-sessions\", name: \"logout-sessions\", value: \"on\", checked: true }), msgStr(\"logoutOtherSessions\")] }) }))) })) })), _jsx(\"div\", Object.assign({ id: \"kc-form-buttons\", className: getClassName(\"kcFormButtonsClass\") }, { children: isAppInitiatedAction ? (_jsxs(_Fragment, { children: [_jsx(\"input\", { className: clsx(getClassName(\"kcButtonClass\"), getClassName(\"kcButtonPrimaryClass\"), getClassName(\"kcButtonLargeClass\")), type: \"submit\", defaultValue: msgStr(\"doSubmit\") }), _jsx(\"button\", Object.assign({ className: clsx(getClassName(\"kcButtonClass\"), getClassName(\"kcButtonDefaultClass\"), getClassName(\"kcButtonLargeClass\")), type: \"submit\", name: \"cancel-aia\", value: \"true\" }, { children: msg(\"doCancel\") }))] })) : (_jsx(\"input\", { className: clsx(getClassName(\"kcButtonClass\"), getClassName(\"kcButtonPrimaryClass\"), getClassName(\"kcButtonBlockClass\"), getClassName(\"kcButtonLargeClass\")), type: \"submit\", value: msgStr(\"doSubmit\") })) }))] }))] })) })));\n}\n//# sourceMappingURL=LoginUpdatePassword.js.map"],"names":["LoginUpdatePassword","props","kcContext","i18n","doUseDefaultCss","Template","classes","getClassName","useGetClassName","msg","msgStr","url","messagesPerField","isAppInitiatedAction","username","_jsx","_jsxs","clsx","_Fragment"],"mappings":"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","x_google_ignoreList":[0]}