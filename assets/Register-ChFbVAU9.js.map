{"version":3,"file":"Register-ChFbVAU9.js","sources":["../../src/keycloak-theme/login/pages/Register.tsx"],"sourcesContent":["// ejected using 'npx eject-keycloak-page'\nimport { clsx } from \"keycloakify/tools/clsx\";\nimport type { PageProps } from \"keycloakify/login/pages/PageProps\";\nimport { useGetClassName } from \"keycloakify/login/lib/useGetClassName\";\nimport type { KcContext } from \"../kcContext\";\nimport type { I18n } from \"../i18n\";\n\nexport default function Register(props: PageProps<Extract<KcContext, { pageId: \"register.ftl\" }>, I18n>) {\n    const { kcContext, i18n, doUseDefaultCss, Template, classes } = props;\n\n    const { getClassName } = useGetClassName({\n        doUseDefaultCss,\n        classes\n    });\n\n    const { url, messagesPerField, register, realm, passwordRequired, recaptchaRequired, recaptchaSiteKey } = kcContext;\n\n    const { msg, msgStr } = i18n;\n\n    return (\n        <Template {...{ kcContext, i18n, doUseDefaultCss, classes }} headerNode={msg(\"registerTitle\")}>\n            <form id=\"kc-register-form\" className={getClassName(\"kcFormClass\")} action={url.registrationAction} method=\"post\">\n                <div\n                    className={clsx(\n                        getClassName(\"kcFormGroupClass\"),\n                        messagesPerField.printIfExists(\"firstName\", getClassName(\"kcFormGroupErrorClass\"))\n                    )}\n                >\n                    <div className={getClassName(\"kcLabelWrapperClass\")}>\n                        <label htmlFor=\"firstName\" className={getClassName(\"kcLabelClass\")}>\n                            {msg(\"firstName\")}\n                        </label>\n                    </div>\n                    <div className={getClassName(\"kcInputWrapperClass\")}>\n                        <input\n                            type=\"text\"\n                            id=\"firstName\"\n                            className={getClassName(\"kcInputClass\")}\n                            name=\"firstName\"\n                            defaultValue={register.formData.firstName ?? \"\"}\n                        />\n                    </div>\n                </div>\n\n                <div\n                    className={clsx(\n                        getClassName(\"kcFormGroupClass\"),\n                        messagesPerField.printIfExists(\"lastName\", getClassName(\"kcFormGroupErrorClass\"))\n                    )}\n                >\n                    <div className={getClassName(\"kcLabelWrapperClass\")}>\n                        <label htmlFor=\"lastName\" className={getClassName(\"kcLabelClass\")}>\n                            {msg(\"lastName\")}\n                        </label>\n                    </div>\n                    <div className={getClassName(\"kcInputWrapperClass\")}>\n                        <input\n                            type=\"text\"\n                            id=\"lastName\"\n                            className={getClassName(\"kcInputClass\")}\n                            name=\"lastName\"\n                            defaultValue={register.formData.lastName ?? \"\"}\n                        />\n                    </div>\n                </div>\n\n                <div\n                    className={clsx(getClassName(\"kcFormGroupClass\"), messagesPerField.printIfExists(\"email\", getClassName(\"kcFormGroupErrorClass\")))}\n                >\n                    <div className={getClassName(\"kcLabelWrapperClass\")}>\n                        <label htmlFor=\"email\" className={getClassName(\"kcLabelClass\")}>\n                            {msg(\"email\")}\n                        </label>\n                    </div>\n                    <div className={getClassName(\"kcInputWrapperClass\")}>\n                        <input\n                            type=\"text\"\n                            id=\"email\"\n                            className={getClassName(\"kcInputClass\")}\n                            name=\"email\"\n                            defaultValue={register.formData.email ?? \"\"}\n                            autoComplete=\"email\"\n                        />\n                    </div>\n                </div>\n                {!realm.registrationEmailAsUsername && (\n                    <div\n                        className={clsx(\n                            getClassName(\"kcFormGroupClass\"),\n                            messagesPerField.printIfExists(\"username\", getClassName(\"kcFormGroupErrorClass\"))\n                        )}\n                    >\n                        <div className={getClassName(\"kcLabelWrapperClass\")}>\n                            <label htmlFor=\"username\" className={getClassName(\"kcLabelClass\")}>\n                                {msg(\"username\")}\n                            </label>\n                        </div>\n                        <div className={getClassName(\"kcInputWrapperClass\")}>\n                            <input\n                                type=\"text\"\n                                id=\"username\"\n                                className={getClassName(\"kcInputClass\")}\n                                name=\"username\"\n                                defaultValue={register.formData.username ?? \"\"}\n                                autoComplete=\"username\"\n                            />\n                        </div>\n                    </div>\n                )}\n                {passwordRequired && (\n                    <>\n                        <div\n                            className={clsx(\n                                getClassName(\"kcFormGroupClass\"),\n                                messagesPerField.printIfExists(\"password\", getClassName(\"kcFormGroupErrorClass\"))\n                            )}\n                        >\n                            <div className={getClassName(\"kcLabelWrapperClass\")}>\n                                <label htmlFor=\"password\" className={getClassName(\"kcLabelClass\")}>\n                                    {msg(\"password\")}\n                                </label>\n                            </div>\n                            <div className={getClassName(\"kcInputWrapperClass\")}>\n                                <input\n                                    type=\"password\"\n                                    id=\"password\"\n                                    className={getClassName(\"kcInputClass\")}\n                                    name=\"password\"\n                                    autoComplete=\"new-password\"\n                                />\n                            </div>\n                        </div>\n\n                        <div\n                            className={clsx(\n                                getClassName(\"kcFormGroupClass\"),\n                                messagesPerField.printIfExists(\"password-confirm\", getClassName(\"kcFormGroupErrorClass\"))\n                            )}\n                        >\n                            <div className={getClassName(\"kcLabelWrapperClass\")}>\n                                <label htmlFor=\"password-confirm\" className={getClassName(\"kcLabelClass\")}>\n                                    {msg(\"passwordConfirm\")}\n                                </label>\n                            </div>\n                            <div className={getClassName(\"kcInputWrapperClass\")}>\n                                <input type=\"password\" id=\"password-confirm\" className={getClassName(\"kcInputClass\")} name=\"password-confirm\" />\n                            </div>\n                        </div>\n                    </>\n                )}\n                {recaptchaRequired && (\n                    <div className=\"form-group\">\n                        <div className={getClassName(\"kcInputWrapperClass\")}>\n                            <div className=\"g-recaptcha\" data-size=\"compact\" data-sitekey={recaptchaSiteKey}></div>\n                        </div>\n                    </div>\n                )}\n                <div className={getClassName(\"kcFormGroupClass\")}>\n                    <div id=\"kc-form-options\" className={getClassName(\"kcFormOptionsClass\")}>\n                        <div className={getClassName(\"kcFormOptionsWrapperClass\")}>\n                            <span>\n                                <a href={url.loginUrl}>{msg(\"backToLogin\")}</a>\n                            </span>\n                        </div>\n                    </div>\n\n                    <div id=\"kc-form-buttons\" className={getClassName(\"kcFormButtonsClass\")}>\n                        <input\n                            className={clsx(\n                                getClassName(\"kcButtonClass\"),\n                                getClassName(\"kcButtonPrimaryClass\"),\n                                getClassName(\"kcButtonBlockClass\"),\n                                getClassName(\"kcButtonLargeClass\")\n                            )}\n                            type=\"submit\"\n                            value={msgStr(\"doRegister\")}\n                        />\n                    </div>\n                </div>\n            </form>\n        </Template>\n    );\n}\n"],"names":["Register","props","kcContext","i18n","doUseDefaultCss","Template","classes","getClassName","useGetClassName","url","messagesPerField","register","realm","passwordRequired","recaptchaRequired","recaptchaSiteKey","msg","msgStr","jsx","jsxs","clsx","Fragment"],"mappings":"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"}