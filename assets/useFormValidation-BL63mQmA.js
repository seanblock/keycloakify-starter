import{r as m,l as M,u as S,j as y}from"./index-thnRO-h7.js";Array.prototype.every||(Array.prototype.every=function(j,b){var E,c;if(this==null)throw new TypeError("this is null or not defined");var l=Object(this),p=l.length>>>0;if(typeof j!="function"&&Object.prototype.toString.call(j)!=="[object Function]")throw new TypeError;for(arguments.length>1&&(E=b),c=0;c<p;){var f;if(c in l){var h;if(f=l[c],E?h=j.call(E,f,c,l):h=j(f,c,l),!h)return!1}c++}return!0});const N=/^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;function I(j){const{kcContext:b,passwordValidators:E={},i18n:c}=j,l=m.useMemo(()=>b.passwordRequired?(()=>{const n=b.realm.registrationEmailAsUsername?"email":"username";return b.profile.attributes.reduce((r,t)=>[...r,...t.name!==n?[t]:[t,M({name:"password",displayName:M("${password}"),required:!0,readOnly:!1,validators:E,annotations:{},groupAnnotations:{},autocomplete:"new-password"}),M({name:"password-confirm",displayName:M("${passwordConfirm}"),required:!0,readOnly:!1,validators:{_compareToOther:{name:"password","ignore.empty.value":!0,shouldBe:"equal","error-message":M("${invalidPasswordConfirmMessage}")}},annotations:{},groupAnnotations:{},autocomplete:"new-password"})]],[])})():b.profile.attributes,[b,E]),{getErrors:p}=F({kcContext:{messagesPerField:b.messagesPerField,profile:{attributes:l}},i18n:c}),f=m.useMemo(()=>Object.fromEntries(l.map(n=>({attribute:n,errors:p({name:n.name,fieldValueByAttributeName:Object.fromEntries(l.map(({name:r,value:t})=>[r,{value:t??""}]))})})).map(({attribute:n,errors:r})=>{var t;return[n.name,{value:(t=n.value)!==null&&t!==void 0?t:"",errors:r,doDisplayPotentialErrorMessages:r.length!==0}]})),[l]),[h,k]=m.useReducer((n,r)=>Object.assign(Object.assign({},n),{[r.name]:Object.assign(Object.assign({},n[r.name]),(()=>{switch(r.action){case"focus lost":return{doDisplayPotentialErrorMessages:!0};case"update value":return{value:r.newValue,errors:p({name:r.name,fieldValueByAttributeName:Object.assign(Object.assign({},n),{[r.name]:{value:r.newValue}})})}}})())}),f);return{formValidationState:m.useMemo(()=>({fieldStateByAttributeName:Object.fromEntries(Object.entries(h).map(([n,{value:r,errors:t,doDisplayPotentialErrorMessages:w}])=>[n,{value:r,displayableErrors:w?t:[]}])),isFormSubmittable:Object.entries(h).every(([n,{value:r,errors:t}])=>t.length===0&&(r!==""||!l.find(w=>w.name===n).required))}),[h,l]),formValidationDispatch:k,attributesWithPassword:l}}function F(j){const{kcContext:b,i18n:E}=j,{messagesPerField:c,profile:{attributes:l}}=b,{msg:p,msgStr:f,advancedMsg:h,advancedMsgStr:k}=E;return{getErrors:S(n=>{var r;const{name:t,fieldValueByAttributeName:w}=n,{value:d}=w[t],{value:A,validators:x}=l.find(e=>e.name===t);e:{if((A??"")!==d)break e;let e;try{e=c.existsError(t)}catch{break e}if(!e)break e;const s=c.get(t);return[{validatorName:void 0,errorMessageStr:s,errorMessage:y.jsx("span",{children:s},0)}]}const a=[];e:{const e="length",s=x[e];if(s===void 0)break e;const{"ignore.empty.value":g=!1,max:o,min:u}=s;if(g&&d==="")break e;if(o!==void 0&&d.length>parseInt(o)){const i=["error-invalid-length-too-long",o];a.push({errorMessage:y.jsx(m.Fragment,{children:p(...i)},a.length),errorMessageStr:f(...i),validatorName:e})}if(u!==void 0&&d.length<parseInt(u)){const i=["error-invalid-length-too-short",u];a.push({errorMessage:y.jsx(m.Fragment,{children:p(...i)},a.length),errorMessageStr:f(...i),validatorName:e})}}e:{const e="_compareToOther",s=x[e];if(s===void 0)break e;const{"ignore.empty.value":g=!1,name:o,shouldBe:u,"error-message":i}=s;if(g&&d==="")break e;const{value:v}=w[o];if((()=>{switch(u){case"different":return v!==d;case"equal":return v===d}})())break e;const O=[i??M((()=>{switch(u){case"equal":return"shouldBeEqual";case"different":return"shouldBeDifferent"}})()),o,t,u];a.push({validatorName:e,errorMessage:y.jsx(m.Fragment,{children:h(...O)},a.length),errorMessageStr:k(...O)})}e:{const e="pattern",s=x[e];if(s===void 0)break e;const{"ignore.empty.value":g=!1,pattern:o,"error-message":u}=s;if(g&&d===""||new RegExp(o).test(d))break e;const i=[u??M("shouldMatchPattern"),o];a.push({validatorName:e,errorMessage:y.jsx(m.Fragment,{children:h(...i)},a.length),errorMessageStr:k(...i)})}e:{if(((r=[...a].reverse()[0])===null||r===void 0?void 0:r.validatorName)==="pattern")break e;const e="email",s=x[e];if(s===void 0)break e;const{"ignore.empty.value":g=!1}=s;if(g&&d===""||N.test(d))break e;const o=[M("invalidEmailMessage")];a.push({validatorName:e,errorMessage:y.jsx(m.Fragment,{children:p(...o)},a.length),errorMessageStr:f(...o)})}e:{const e="integer",s=x[e];if(s===void 0)break e;const{"ignore.empty.value":g=!1,max:o,min:u}=s;if(g&&d==="")break e;const i=parseInt(d);if(isNaN(i)){const v=["mustBeAnInteger"];a.push({validatorName:e,errorMessage:y.jsx(m.Fragment,{children:p(...v)},a.length),errorMessageStr:f(...v)});break e}if(o!==void 0&&i>parseInt(o)){const v=["error-number-out-of-range-too-big",o];a.push({validatorName:e,errorMessage:y.jsx(m.Fragment,{children:p(...v)},a.length),errorMessageStr:f(...v)});break e}if(u!==void 0&&i<parseInt(u)){const v=["error-number-out-of-range-too-small",u];a.push({validatorName:e,errorMessage:y.jsx(m.Fragment,{children:p(...v)},a.length),errorMessageStr:f(...v)});break e}}e:{const e="options",s=x[e];if(s===void 0||d===""||s.options.indexOf(d)>=0)break e;const g=[M("notAValidOption")];a.push({validatorName:e,errorMessage:y.jsx(m.Fragment,{children:h(...g)},a.length),errorMessageStr:k(...g)})}return a})}}export{I as u};
//# sourceMappingURL=useFormValidation-BL63mQmA.js.map
